{"version":3,"file":"components-Button-index-stories.33ccddce.iframe.bundle.js","mappings":";;;;;;;AAiCA;;;;AAMA;;;;;AAOA;;;;AAMA;;;;AAMA;;;;AAMA;;;;;;AAaA","sources":["webpack://@markmorcos/ui/./src/components/Button/index.tsx"],"sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\ninterface Props {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary?: boolean\n  /**\n   * How large should the button be?\n   */\n  size?: 'small' | 'medium' | 'large'\n  /**\n   * Button contents\n   */\n  children: React.ReactNode\n  /**\n   * Optional disabled flag\n   */\n  disabled?: boolean\n  /**\n   * Optional click handler\n   */\n  onClick?: () => void\n}\n\nconst StyledButton = styled.button`\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n  ${(props: Props) =>\n    props.primary &&\n    css`\n      color: white;\n      background-color: black;\n    `}\n  ${(props: Props) =>\n    !props.primary &&\n    css`\n      color: #333;\n      background-color: transparent;\n      box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n    `}\n  ${(props: Props) =>\n    props.size === 'small' &&\n    css`\n      font-size: 12px;\n      padding: 10px 16px;\n    `}\n  ${(props: Props) =>\n    props.size === 'medium' &&\n    css`\n      font-size: 14px;\n      padding: 11px 20px;\n    `}\n  ${(props: Props) =>\n    props.size === 'large' &&\n    css`\n      font-size: 16px;\n      padding: 12px 24px;\n    `}\n  ${(props: Props) =>\n    props.disabled &&\n    css`\n      cursor: default;\n      color: #d9d9d9;\n      background-color: white;\n      cursor: not-allowed;\n    `}\n`\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({\n  disabled = false,\n  primary = false,\n  size = 'medium',\n  onClick = () => null,\n  children,\n  ...props\n}: Props) => (\n  <StyledButton\n    type='button'\n    className='button'\n    primary={primary}\n    size={size}\n    disabled={disabled}\n    onClick={disabled ? undefined : onClick}\n    {...props}\n  >\n    {children}\n  </StyledButton>\n)\n"],"names":[],"sourceRoot":""}